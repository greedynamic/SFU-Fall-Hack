[{"/Users/natalyalebedeva/Documents/GitHub/SFU-Fall-Hack/client/src/index.js":"1","/Users/natalyalebedeva/Documents/GitHub/SFU-Fall-Hack/client/src/App.js":"2","/Users/natalyalebedeva/Documents/GitHub/SFU-Fall-Hack/client/src/components/Menu.jsx":"3","/Users/natalyalebedeva/Documents/GitHub/SFU-Fall-Hack/client/src/pages/Login.jsx":"4","/Users/natalyalebedeva/Documents/GitHub/SFU-Fall-Hack/client/src/pages/Home.jsx":"5","/Users/natalyalebedeva/Documents/GitHub/SFU-Fall-Hack/client/src/pages/EventForm.jsx":"6","/Users/natalyalebedeva/Documents/GitHub/SFU-Fall-Hack/client/src/components/EventCard.jsx":"7","/Users/natalyalebedeva/Documents/GitHub/SFU-Fall-Hack/client/src/context/GlobalContext.js":"8"},{"size":347,"mtime":1665872043801,"results":"9","hashOfConfig":"10"},{"size":697,"mtime":1665872005455,"results":"11","hashOfConfig":"10"},{"size":932,"mtime":1665862413417,"results":"12","hashOfConfig":"10"},{"size":2144,"mtime":1665875326958,"results":"13","hashOfConfig":"10"},{"size":942,"mtime":1665873092381,"results":"14","hashOfConfig":"10"},{"size":2288,"mtime":1665874187667,"results":"15","hashOfConfig":"10"},{"size":966,"mtime":1665872979228,"results":"16","hashOfConfig":"10"},{"size":285,"mtime":1665872853877,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"1513x33",{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"21"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"21"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"/Users/natalyalebedeva/Documents/GitHub/SFU-Fall-Hack/client/src/index.js",[],[],[],"/Users/natalyalebedeva/Documents/GitHub/SFU-Fall-Hack/client/src/App.js",[],[],"/Users/natalyalebedeva/Documents/GitHub/SFU-Fall-Hack/client/src/components/Menu.jsx",[],[],"/Users/natalyalebedeva/Documents/GitHub/SFU-Fall-Hack/client/src/pages/Login.jsx",["45","46"],[],"/Users/natalyalebedeva/Documents/GitHub/SFU-Fall-Hack/client/src/pages/Home.jsx",["47","48"],[],"import EventCard from '../components/EventCard';\r\nimport {useState, useContext, useEffect} from 'react';\r\nimport {Context} from '../context/GlobalContext';\r\n\r\nfunction Home(){\r\n\tconst userId = useContext(Context);\r\n\tuseEffect(()=>{\r\n\t\tconsole.log(userId);\r\n\t}, []);\r\n\tconst events = [\r\n\t\t{\r\n\t\t\tid: 1,\r\n\t\t\ttitle: 'Coldplay world tour',\r\n\t\t\tlocation: 'Rogers arena',\r\n\t\t\ttime: 'October 18th 2022',\r\n\t\t\tcost: 0,\r\n\t\t\tuserID: 10,\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 2,\r\n\t\t\ttitle: 'Maroon 5 concer',\r\n\t\t\tlocation: 'Toronto',\r\n\t\t\ttime: 'tomorrow',\r\n\t\t\tcost: 0,\r\n\t\t\tuserID: 11,\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 3,\r\n\t\t\ttitle: 'SFU special concert',\r\n\t\t\tlocation: 'SFU Burnaby, AQ',\r\n\t\t\ttime: '7 pm',\r\n\t\t\tcost: 0,\r\n\t\t\tuserID: 12,\r\n\t\t},\r\n\t];\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{events.map((event)=>{\r\n\t\t\t\treturn <EventCard key={event.id} title={event.title} location={event.location} time={event.time} cost={event.cost} userID={event.userID} />;\r\n\t\t\t})}\r\n\t\t</div>\r\n\t);\r\n}\r\nexport default Home;\r\n","/Users/natalyalebedeva/Documents/GitHub/SFU-Fall-Hack/client/src/pages/EventForm.jsx",["49","50"],[],"/Users/natalyalebedeva/Documents/GitHub/SFU-Fall-Hack/client/src/components/EventCard.jsx",["51","52"],[],"const styles = {\r\n  eventCard: {\r\n    width: \"45rem\",\r\n    margin: \"auto\",\r\n    marginTop: \"2em\",\r\n    display: \"block\"\r\n  }\r\n};\r\nconst EventCard = ({ title, location, time, cost, userID }) => {\r\n  return (\r\n    <div className=\"card\" style={styles.eventCard}>\r\n      <div className=\"card-body\">\r\n        <h5 className=\"card-title\">{title}</h5>\r\n        <hr></hr>\r\n        <p className=\"card-text\">\r\n          Venue Location: {location} <br />\r\n          Date and Time: {time} <br />\r\n          Original Cost: {cost}\r\n        </p>\r\n        <a href=\"#\" className=\"btn btn-primary\">\r\n          Go somewhere\r\n        </a>\r\n        {userID == 11 && (\r\n          <button\r\n            style={{ marginLeft: \"1em\" }}\r\n            onClick={() => {\r\n              console.log(\"clicked\");\r\n            }}\r\n            className=\"btn btn-primary\"\r\n          >\r\n            Delete\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EventCard;\r\n","/Users/natalyalebedeva/Documents/GitHub/SFU-Fall-Hack/client/src/context/GlobalContext.js",[],[],{"ruleId":"53","severity":1,"message":"54","line":6,"column":9,"nodeType":"55","messageId":"56","endLine":6,"endColumn":17},{"ruleId":"57","severity":1,"message":"58","line":16,"column":5,"nodeType":"59","endLine":16,"endColumn":7,"suggestions":"60"},{"ruleId":"53","severity":1,"message":"54","line":2,"column":9,"nodeType":"55","messageId":"56","endLine":2,"endColumn":17},{"ruleId":"57","severity":1,"message":"58","line":9,"column":5,"nodeType":"59","endLine":9,"endColumn":7,"suggestions":"61"},{"ruleId":"53","severity":1,"message":"54","line":6,"column":9,"nodeType":"55","messageId":"56","endLine":6,"endColumn":17},{"ruleId":"57","severity":1,"message":"58","line":17,"column":5,"nodeType":"59","endLine":17,"endColumn":7,"suggestions":"62"},{"ruleId":"63","severity":1,"message":"64","line":20,"column":9,"nodeType":"65","endLine":20,"endColumn":49},{"ruleId":"66","severity":1,"message":"67","line":23,"column":17,"nodeType":"68","messageId":"69","endLine":23,"endColumn":19},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userId'. Either include it or remove the dependency array.","ArrayExpression",["70"],["71"],["72"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",{"desc":"73","fix":"74"},{"desc":"73","fix":"75"},{"desc":"73","fix":"76"},"Update the dependencies array to be: [userId]",{"range":"77","text":"78"},{"range":"79","text":"78"},{"range":"80","text":"78"},[493,495],"[userId]",[261,263],[584,586]]